# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
permissions:
  contents: read
  pull-requests: write
jobs:
  scan-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for full Git history

      - name: Run TruffleHog Scan
        run: |
          docker run --rm \
            -v "$(pwd):/repo" \
            trufflesecurity/trufflehog:latest \
            git file:///repo \
            --only-verified \
            --fail
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch full Git history
        run: git fetch --prune --unshallow --tags origin +refs/heads/*:refs/remotes/origin/*

      - name: Validate commit messages
        run: |
          pattern='^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert|wip):(\s\[[A-Z]+-[0-9]+\])?\s.+'
          git log --format=%s ${{ github.event.before }}..${{ github.sha }} | while read commit_msg; do
            if ! [[ "$commit_msg" =~ $pattern ]]; then
              echo "‚ùå Invalid commit message: '$commit_msg'"
              echo "üí° Expected format: type: [JiraID-123] message"
              exit 1
            fi
          done
  validate-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Check in pnpm-lock.yaml
        run: test -f pnpm-lock.yaml
      - name: Run ESLint
        run: npx eslint . --fix
      - name: Run Prettier write
        run: npx prettier --write .
      - name: Run Prettier check
        run: npx prettier --check .
      - name: TypeScript type check
        run: npx tsc --noEmit
      - name: Audit dependencies
        run: pnpm audit --audit-level=high
      - name: Build extension
        run: pnpm run build
